# .functions

# 1. Quick Directory Navigation
# Function to jump to commonly used directories
function projects() {
    cd ~/Projects
}

function docs() {
    cd ~/Documents
}

# 2. Git Helpers
# Fetch, pull, and update submodules in one command
function gupdate() {
    git fetch --all
    git pull --rebase
    git submodule update --init --recursive
}

# Open the last modified file in the current directory
function glast() {
    git log -1 --pretty=%B
}

# 3. System Management
# Check disk usage for each directory in the current path
function ducks() {
    du -h --max-depth=1 "$@" | sort -hr
}

# Show the top 10 largest files in the current directory
function largest_files() {
    find . -type f -exec du -h {} + | sort -rh | head -n 10
}

# Clear DNS cache
function clear_dns() {
    sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder
    echo "DNS cache cleared."
}

# 4. Network Tools
# Simple function to check if a website is reachable
function pingtest() {
    if ping -c 1 "$1" &> /dev/null; then
        echo "$1 is reachable"
    else
        echo "$1 is not reachable"
    fi
}

# Get public IP address
function myip() {
    curl -s https://ipinfo.io/ip
}

# 5. Quick Archiving
# Compress a folder into a .tar.gz file
function compress() {
    if [ -z "$1" ]; then
        echo "Usage: compress <directory>"
    else
        tar -zcvf "$1.tar.gz" "$1"
    fi
}

# Extract various compressed file types
function extract() {
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.bz2)  tar xvjf "$1"   ;;
            *.tar.gz)   tar xvzf "$1"   ;;
            *.bz2)      bunzip2 "$1"    ;;
            *.rar)      unrar x "$1"    ;;
            *.gz)       gunzip "$1"     ;;
            *.tar)      tar xvf "$1"    ;;
            *.tbz2)     tar xvjf "$1"   ;;
            *.tgz)      tar xvzf "$1"   ;;
            *.zip)      unzip "$1"      ;;
            *.Z)        uncompress "$1" ;;
            *.7z)       7z x "$1"       ;;
            *)          echo "Cannot extract $1" ;;
        esac
    else
        echo "$1 is not a valid file"
    fi
}
